#summary The vision of the Opengoss Platform
#labels Phase-Requirements

= Introduction =

Opengoss is an open-source based, full stack EMS/NMS platform.
It does not provide the end-user function, but provide the developer helpful function.


= A methodology about MDA in EMS/NMS domain=

  There is a simplified model driven language in Opengoss Platform, it's business-oriented, and implementation-related model language. 

  We name this language as OML(Opengoss Model Language).
  
  OML combines the user's business and developer's implementations. It descripts the user's business from the developer's view.

  In fact, the model wroten by OML is not a pure PIM(Platform Independed Model), or PSM(Platform Specified Model), It's just an Opengoss co-related model language, it's between the PIM and PSM.

  OML orients the most populated architecture, it models the distributed computer system with a server role and client role (not CS architecture), client send request to the server by interfaces and models.
  
  The business model defined by OML includes: 

   (1).Domain Entity

   (2).Service Operations

   (3).Service Messages

   (4).Search/Retrieve Models.

= A powerful runtime platform which can simplify the routine development work greatly =

   (1).The runtime platform includes a server-platform, a rich-client platform based on Swing(Java) technology, a thin-client platform using AJAX based on GWT(Google). You can think those platform as an container which can manage the object instances generated by OML.

   (2).The runtime platform provides some basic functions for the EMS/NMS, such as SM, LM, it provides some default implementation, and you can replace them or use them as the sample cases to direct you developing new business.

   (3).It provides the basic infrastractures, such as the client/server communication model.

= An accumulated platform which can support a company or an organization to growth =

  Because of all the runtime platforms of Opengoss are based on OpenCore technology, which is a microkernel, pure component based and service oriented software infrastructure built on OSGi and Equinox.  We provides the first-stage accumulatation.